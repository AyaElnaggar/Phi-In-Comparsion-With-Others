module shiftreg (
  output serial_out,
  input serial_in,
  input clk
  ) {
  
   dff pipe[4] (.clk(clk));
    var i;
      always {
        pipe.d[0] = serial_in; // SI goes into the start of the pipe
        serial_out = pipe.q[3]; // SO is the end of the pipe
        // for each intermediate state
        for (i = 1; i < 3; i++)
          pipe.d[i] = pipe.q[i-1]; // copy from previous
      }
}